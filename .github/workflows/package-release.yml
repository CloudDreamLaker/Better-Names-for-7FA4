name: Package and Release to GitLab

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  package-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取所有历史记录和标签
      
    - name: Create ZIP package
      run: |
        cd Better-Names-for-7FA4
        zip -r ../Better-Names-for-7FA4-${{ github.ref_name }}.zip .
        
    - name: Create Release in GitLab
      env:
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        GITLAB_URL: "http://jx.7fa4.cn:9080"
      run: |
        # 设置变量
        TAG_NAME=${GITHUB_REF#refs/tags/}
        ZIP_FILE="Better-Names-for-7FA4-$TAG_NAME.zip"
        PROJECT_ID="wsh%2Ftest"
        
        echo "Creating release $TAG_NAME in GitLab..."
        
        # 1. 首先上传文件到 GitLab
        UPLOAD_RESPONSE=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          --form "file=@$ZIP_FILE" \
          "$GITLAB_URL/api/v4/projects/$PROJECT_ID/uploads" -s)
        
        echo "Upload response: $UPLOAD_RESPONSE"
        
        # 提取上传文件的 markdown 链接
        UPLOAD_MARKDOWN=$(echo "$UPLOAD_RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin)['markdown'])")
        
        # 2. 创建 release，确保包含 ref 参数
        RELEASE_JSON='{
          "name": "Better Names for 7FA4 '"$TAG_NAME"'",
          "tag_name": "'"$TAG_NAME"'",
          "ref": "'"$TAG_NAME"'",
          "description": "Automated release from GitHub Actions. Download: '"$UPLOAD_MARKDOWN"'",
          "assets": {
            "links": [
              {
                "name": "Better-Names-for-7FA4-'"$TAG_NAME"'.zip",
                "url": "'"$GITLAB_URL"'/uploads/'"$(echo "$UPLOAD_RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin)['url'])"")"'",
                "link_type": "package"
              }
            ]
          }
        }'
        
        echo "Release JSON: $RELEASE_JSON"
        
        # 创建 release
        RELEASE_RESPONSE=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          --header "Content-Type: application/json" \
          --data "$RELEASE_JSON" \
          "$GITLAB_URL/api/v4/projects/$PROJECT_ID/releases" -w "\n%{http_code}")
        
        HTTP_CODE=$(echo "$RELEASE_RESPONSE" | tail -n1)
        RESPONSE_BODY=$(echo "$RELEASE_RESPONSE" | head -n -1)
        
        echo "Release response HTTP code: $HTTP_CODE"
        echo "Release response body: $RESPONSE_BODY"
        
        if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
          echo "Release created successfully!"
        else
          echo "Failed to create release"
          exit 1
        fi